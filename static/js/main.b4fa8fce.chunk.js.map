{"version":3,"sources":["components/Navbar.js","components/TextBox.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","navbarTitle","type","id","htmlFor","onChange","event","changeColor","target","value","color","title","role","onClick","modeChanger","modeText","TextBox","useState","text","updateText","label","placeholder","rows","disabled","length","toUpperCase","showAlert","toLowerCase","newText","split","join","navigator","clipboard","writeText","filter","element","Alert","style","height","alert","word","lowerWord","charAt","slice","capitalize","message","defaultProps","homeTitle","aboutTitle","App","updateMode","modeTextUpdate","changeAlert","setTimeout","document","body","backgroundColor","getElementById","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b4fa8fce.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    const pickColor = (event) => {\r\n        props.changeColor(event.target.value)\r\n    }\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.navbarTitle}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">{props.homeTitle}</Link>\r\n                        </li> */}\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutTitle}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <label id=\"exampleColorInputLabel\" htmlFor=\"exampleColorInput\" className=\"form-label\">Choose Dark Color</label>\r\n                    <input type=\"color\" className=\"form-control form-control-color mx-2\" id=\"exampleColorInput\" onChange={pickColor} value={props.color} title=\"Choose your color\" />\r\n                    <div className=\"form-check form-switch my-2\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" onClick={props.modeChanger} />\r\n                        <label className={`form-check-label text-${props.mode === \"light\" ? \"dark\" : \"light\"}`} htmlFor=\"flexSwitchCheckChecked\">{props.modeText}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    navbarTitle: PropTypes.string.isRequired,\r\n    homeTitle: PropTypes.string.isRequired,\r\n    aboutTitle: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    navbarTitle: \"TextUtils\",\r\n    homeTitle: \"Home\",\r\n    aboutTitle: \"About Us\"\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TextBox(props) {\r\n    const [text, updateText] = useState(\"\");\r\n\r\n    const finalText = (event) => {\r\n        updateText(event.target.value);\r\n    }\r\n    const convertToUpper = () => {\r\n        updateText(text.toUpperCase());\r\n        props.showAlert(\"Converted To Uppercase\", \"success\");\r\n    }\r\n    const convertToLower = () => {\r\n        updateText(text.toLowerCase());\r\n        props.showAlert(\"Converted To LowerCase\", \"success\");\r\n    }\r\n    const clear = () => {\r\n        updateText(\"\");\r\n        props.showAlert(\"Textbox Cleared\", \"success\");\r\n    }\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied To Clipboard\", \"success\");\r\n    }\r\n    const removeExtraSpaces = () => {\r\n        let newText = text.split(/ +/);\r\n        updateText(newText.join(\" \"));\r\n        props.showAlert(\"Removed Extra Spaces\", \"success\");\r\n    }\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"textBox\" className=\"form-label\"><p className=\"h4\">{props.label}</p></label>\r\n                    <textarea className=\"form-control mb-1\" placeholder=\"Enter Something To Convert!!\" value={text} onChange={finalText} id=\"textBox\" rows=\"5\"></textarea>\r\n                    <input disabled={text.length === 0} type=\"button\" value=\"Convert to Uppercase\" onClick={convertToUpper} className=\"btn btn-primary mx-1 my-1\" />\r\n                    <input disabled={text.length === 0} type=\"button\" value=\"Convert to Lowercase\" onClick={convertToLower} className=\"btn btn-primary mx-1 my-1\" />\r\n                    <input disabled={text.length === 0} type=\"button\" value=\"Remove Extra Spaces\" onClick={removeExtraSpaces} className=\"btn btn-primary mx-1 my-1\" />\r\n                    <input disabled={text.length === 0} type=\"button\" id=\"copy\" value=\"Copy\" onClick={copyText} className=\"btn btn-secondary mx-1 my-1\" />\r\n                    <input disabled={text.length === 0} type=\"button\" value=\"Clear\" onClick={clear} className=\"btn btn-danger mx-1 my-1\" />\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h2>Your Text Summary</h2>\r\n                        <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Words and {text.length} Characters</p>\r\n                        <p>{0.008 * (text.split(\" \").filter((element) => { return element.length !== 0 }).length)} Minutes to Read</p>\r\n                        <h2>Preview</h2>\r\n                        <p>{text.length === 0 ? \"Nothing to Preview!!\" : text}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTextBox.propTypes = {\r\n    label: PropTypes.string.isRequired\r\n}\r\n\r\nTextBox.defaultProps = {\r\n    label: \"Enter the text below\"\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lowerWord = word.toLowerCase();\r\n        return lowerWord.charAt(0).toUpperCase() + lowerWord.slice(1);\r\n    }\r\n    return (\r\n        <div style={{ height: \"45px\" }}>{\r\n            props.alert && <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextBox from \"./components/TextBox\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, updateMode] = useState(\"light\");\n  const [modeText, modeTextUpdate] = useState(\"Light Mode Enabled\");\n  const [alert, changeAlert] = useState(null);\n  const [color, changeColor] = useState(\"black\");\n\n  const showAlert = (message, type) => {\n    changeAlert({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      changeAlert(null);\n    }, 1500);\n  }\n\n  const modeChanger = () => {\n    if (mode === \"light\") {\n      updateMode(\"dark\");\n      document.body.style.backgroundColor = color;\n      changeColor(\"#000000\");\n      document.body.style.color = \"white\";\n      document.getElementById(\"exampleColorInputLabel\").style.display = \"none\";\n      document.getElementById(\"exampleColorInput\").style.display = \"none\";\n      modeTextUpdate(\"Dark Mode Enabled\");\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\");\n    }\n    else {\n      updateMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      document.getElementById(\"exampleColorInputLabel\").style.display = \"block\";\n      document.getElementById(\"exampleColorInput\").style.display = \"block\";\n      modeTextUpdate(\"Light Mode Enabled\");\n      showAlert(\"Light Mode Has Been Enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n\n      {/*\n        importance of using exact keyword for matching exact path\n        /user --> component 1\n        /user/home --> component 2 \n      */}\n      {/* <Router> */}\n      <Navbar navbarTitle=\"Text-Utils\" homeTitle=\"Home\" aboutTitle=\"About\" mode={mode} modeChanger={modeChanger} modeText={modeText} changeColor={changeColor} color={color} />\n      <Alert alert={alert} />\n      {/* <Switch> */}\n      {/* <Route exact path=\"/about\"> */}\n      {/* <About mode={mode} color={color} /> */}\n      {/* </Route> */}\n      {/* <Route exact path=\"/\"> */}\n      <TextBox changeAlert={changeAlert} showAlert={showAlert} label=\"TextUtils - Word Counter, Character Counter, Remove Extra Spaces\" />\n      {/* </Route> */}\n      {/* </Switch> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}